/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Views;

import Models.ChiTietDep;
import Models.HoaDon;
import Models.HoaDonChiTiet;
import Models.KhachHang;
import Models.KhuyenMai;
import Models.NguoiDung;
import Services.IChiTietDepService;
import Services.IHoaDonChiTietService;
import Services.IHoaDonService;
import Services.IKhachHangService;
import Services.IKhuyenMaiService;
import Services.implement.ChiTietDepService;
import Services.implement.HoaDonChiTietService;
import Services.implement.HoaDonService;
import Services.implement.KhachHangService;
import Services.implement.KhuyenMaiService;
import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RootPaneContainer;
import javax.swing.table.DefaultTableModel;
import Utilities.ExportFile.ExportWord;

/**
 *
 * @author Admin
 */
public class BanHangPanel extends javax.swing.JPanel implements Runnable, ThreadFactory {

    int index = -1;
    int indexHd = -1;
    int indexHdTT = -1;
    IHoaDonService hdService;
    IHoaDonChiTietService hdCtService;
    IChiTietDepService ctdService;
    IKhuyenMaiService kmService;
    IKhachHangService khService;
    DefaultTableModel tblModelHoaDon;
    DefaultTableModel tblModelHoaDonTT;
    DefaultTableModel tblModelGioHang;
    DefaultTableModel tblModelSanPham;
    KhachHang khachHang = null;
    KhachHang khachHangGan = null;
    NguoiDung nguoiDung = null;
    KhuyenMai khuyenMai = null;
    HoaDon hoaDon = null;
    KhachHang khachHangHD = null;
    SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");

    private WebcamPanel webcamPanelBH = null;
    private Executor executor = Executors.newSingleThreadExecutor(this);

    public BanHangPanel() {
        initComponents();
        hdService = new HoaDonService();
        hdCtService = new HoaDonChiTietService();
        ctdService = new ChiTietDepService();
        kmService = new KhuyenMaiService();
        khService = new KhachHangService();
        nguoiDung = HomeFrm.nguoiDung;
        getModelTable();

        loadTableHoaDon(hdService.getAllByObj("", 0));
        loadTableHoaDonTT(hdService.getAllByObj("", 1));
        loadTableSanPham(ctdService.getAllByObj(0, "", 0));

        initWebCam();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void getModelTable() {
        tblModelHoaDon = (DefaultTableModel) tblHoaDon.getModel();
        tblModelHoaDonTT = (DefaultTableModel) tblHoaDonTT.getModel();
        tblModelGioHang = (DefaultTableModel) tblGioHang.getModel();
        tblModelSanPham = (DefaultTableModel) tblSanPham.getModel();
    }

    public void loadTableHoaDon(List<HoaDon> lst) {
        int i = 0;
        tblModelHoaDon.setRowCount(0);
        for (HoaDon hd : lst) {
            tblModelHoaDon.addRow(new Object[]{
                ++i,
                hd.getMa(),
                hd.getNguoiDung() == null ? "Nhân Viên Ảo" : hd.getNguoiDung(),
                hd.getKhachHang() == null ? "Khách Hàng Ảo" : hd.getKhachHang(),
                hd.getNgayTao() == null ? "" : sdf.format(hd.getNgayTao()),
                hd.getTinhTrang() == 0 ? "Chờ Thanh Toán" : hd.getTinhTrang() == 1 ? "Đã Thanh Toán" : "Đã Hủy"
            });
        }
    }

    public void loadTableHoaDonTT(List<HoaDon> lst) {
        int i = 0;
        tblModelHoaDonTT.setRowCount(0);
        for (HoaDon hd : lst) {
            tblModelHoaDonTT.addRow(new Object[]{
                ++i,
                hd.getMa(),
                hd.getNguoiDung() == null ? "Nhân Viên Ảo" : hd.getNguoiDung(),
                hd.getKhachHang() == null ? "Khách Hàng Ảo" : hd.getKhachHang(),
                hd.getNgayTao() == null ? "" : sdf.format(hd.getNgayTao()),
                hd.getTinhTrang() == 0 ? "Chờ Thanh Toán" : hd.getTinhTrang() == 1 ? "Đã Thanh Toán" : "Đã Hủy"
            });
        }
    }

    public void loadTableSanPham(List<ChiTietDep> lst) {
        int i = 0;
        tblModelSanPham.setRowCount(0);
        for (ChiTietDep ctd : lst) {
            tblModelSanPham.addRow(new Object[]{
                ++i,
                ctd.getDep().getMa(),
                ctd.getDep().getTen(),
                ctd.getLoaiDep(),
                ctd.getSize(),
                ctd.getNsx(),
                ctd.getSoLuong(),
                ctd.getGiaBan()
            });
        }

    }

    public void loadTableGioHang(List<HoaDonChiTiet> lst) {
        int i = 0;
        tblModelGioHang.setRowCount(0);
        for (HoaDonChiTiet hdct : lst) {
            tblModelGioHang.addRow(new Object[]{
                ++i,
                hdct.getChiTietDep().getDep().getMa(),
                hdct.getChiTietDep().getDep().getTen(),
                hdct.getChiTietDep().getLoaiDep().getTen(),
                hdct.getChiTietDep().getSize().getKichCo(),
                hdct.getSoLuong(),
                hdct.getDonGia(),
                hdct.getSoLuong() * hdct.getDonGia().doubleValue()
            });
        }
        tongTien();
    }

    public void clickHoaDon() {
        indexHd = tblHoaDon.getSelectedRow();
        khachHangHD = hdService.getAllByObj("", 0).get(indexHd).getKhachHang();
        String ma = tblHoaDon.getValueAt(indexHd, 1).toString();

        loadTableGioHang(hdCtService.getAllByMa(ma));

        txtMaHD.setText(ma);
        if (khachHangHD == null) {
            lblDiemTichLy.setText("Điểm tích lỹ: 0");
        } else {
            lblDiemTichLy.setText("Điểm tích lỹ: " + khachHangHD.getDiemTichLy());
        }
    }

    public void clickHoaDonTT() {
        indexHd = -1;
        indexHdTT = tblHoaDonTT.getSelectedRow();
        String ma = tblHoaDonTT.getValueAt(indexHdTT, 1).toString();
        loadTableGioHang(hdCtService.getAllByMa(ma));
    }

    public void clickAddSanPham() {
        if (indexHd == -1) {
            JOptionPane.showMessageDialog(this, "Vui Lòng Chọn Hóa Đơn");
            return;
        }
        int indexHD = tblHoaDon.getSelectedRow();
        int indexSp = tblSanPham.getSelectedRow();

        String maHd = tblHoaDon.getValueAt(indexHD, 1).toString();
        HoaDon hd = hdService.getObj(maHd);

        String idCtd = tblSanPham.getValueAt(indexSp, 0).toString();
        ChiTietDep ctd = ctdService.getAllByObj(0, "", 0).get(indexSp);

        String soLuong = JOptionPane.showInputDialog(this, "Nhập Số Lượng Muốn Thêm ?");
        if (soLuong == null) {
            return;
        }
        int sl = 0;
        try {
            sl = Integer.parseInt(soLuong);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số");
            return;
        }
        if (ctd.getSoLuong() < sl) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng nhỏ hơn số lượng sản phẩm hiện có");
            return;
        }
        HoaDonChiTiet hdctGioHang = null;
        hdctGioHang = hdCtService.getObj(hd.getId(), ctd.getId());

        hdCtService.getAllByMa(maHd);
        if (hdctGioHang != null) {

            hdctGioHang.setSoLuong(hdctGioHang.getSoLuong() + sl);

            ctd.setSoLuong(ctd.getSoLuong() - Integer.valueOf(soLuong));

            ctdService.save(ctd);
            hdCtService.save(hdctGioHang);

        } else {

            HoaDonChiTiet hdct = new HoaDonChiTiet();
            hdct.setChiTietDep(ctd);
            hdct.setHoaDon(hd);
            hdct.setNgaySua(new Date());
            hdct.setNgayTao(new Date());
            hdct.setSoLuong(Integer.valueOf(sl));
            hdct.setTinhTrang(0);
            hdct.setDonGia(ctd.getGiaBan());
            ctd.setSoLuong(ctd.getSoLuong() - Integer.valueOf(soLuong));

            ctdService.save(ctd);
            hdCtService.save(hdct);
        }

        loadTableGioHang(hdCtService.getAllByMa(maHd));
        loadTableSanPham(ctdService.getAllByObj(0, txtTimKiemSanPham.getText(), 0));

//        HoaDonChiTiet hdct = hdCtService.getObj(hd.getId(), ctd.getId());
    }

    public void clickGioHang() {
        if (indexHd == -1) {
            return;
        }
        int sl = 0;
        int indexHd = tblHoaDon.getSelectedRow();
        int indexGh = tblGioHang.getSelectedRow();
        String maHd = tblHoaDon.getValueAt(indexHd, 1).toString();
        String maSp = tblGioHang.getValueAt(indexGh, 1).toString();

        String soLuong = JOptionPane.showInputDialog(this, "Vui lòng nhập số lượng");
        if (soLuong == null) {
            return;
        }
        try {
            sl = Integer.valueOf(soLuong);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số");
            return;
        }
        HoaDonChiTiet hdct = hdCtService.getAllByMa(maHd).get(indexGh);
        ChiTietDep ctd = hdCtService.getAllByMa(maHd).get(indexGh).getChiTietDep();
        if (sl == 0 || sl < 0) {
//            HoaDonChiTiet hdct = hdCtService.getAllByMa(maHd).get(indexGh);
            ctd.setSoLuong(ctd.getSoLuong() + hdct.getSoLuong() - sl);

            ctdService.save(ctd);
            hdCtService.delete(hdct);
        } else {

            ctd.setSoLuong(ctd.getSoLuong() + hdct.getSoLuong() - sl);

            hdct.setSoLuong(sl);
            ctdService.save(ctd);
            hdCtService.save(hdct);

        }

        loadTableGioHang(hdCtService.getAllByMa(maHd));
        loadTableSanPham(ctdService.getAllByObj(0, txtTimKiemSanPham.getText(), 0));

    }

    public void deleteGioHang() {
        int indexHd = tblHoaDon.getSelectedRow();
        int indexGh = tblGioHang.getSelectedRow();
        String maHd = tblHoaDon.getValueAt(indexHd, 1).toString();
        int chk = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa");
        if (chk != JOptionPane.YES_OPTION) {
            return;
        }
        HoaDonChiTiet hdct = hdCtService.getAllByMa(maHd).get(indexGh);
        ChiTietDep ctd = hdct.getChiTietDep();
        ctd.setSoLuong(ctd.getSoLuong() + hdct.getSoLuong());
        ctdService.save(ctd);
        hdCtService.delete(hdct);
        JOptionPane.showMessageDialog(this, "Xóa Thành Công");
        loadTableSanPham(ctdService.getAllByObj(0, txtTimKiemSanPham.getText(), 0));

        loadTableGioHang(hdCtService.getAllByMa(maHd));

    }

    public void deleteAllGioHang() {
        int indexHd = tblHoaDon.getSelectedRow();
        String maHd = tblHoaDon.getValueAt(indexHd, 1).toString();
        int chk = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa tất cả");
        if (chk != JOptionPane.YES_OPTION) {
            return;
        }

        for (HoaDonChiTiet hdct : hdCtService.getAllByMa(maHd)) {
            ChiTietDep ctd = hdct.getChiTietDep();
            ctd.setSoLuong(ctd.getSoLuong() + hdct.getSoLuong());
            ctdService.save(ctd);
            hdCtService.delete(hdct);
        }
//        if (hdCtService.deleteAll(maHd)) {
//            JOptionPane.showMessageDialog(this, "Xóa Thành Công");
//        } else {
//            JOptionPane.showMessageDialog(this, "Xóa Thất Bại");
//
//        }

        loadTableGioHang(hdCtService.getAllByMa(maHd));
        loadTableSanPham(ctdService.getAllByObj(0, txtTimKiemSanPham.getText(), 0));

    }

    public void chonKhachHang() {
        KHDlog hkDlog = new KHDlog(null, true);
        hkDlog.setVisible(true);

        khachHang = hkDlog.getKhachHang();
        if (khachHang != null) {
            txtMaKh.setText(khachHang.getMa());
            txtTenKh.setText(khachHang.getTen());
        }

        khachHangGan = hkDlog.ganKhachHang();
        if (khachHangGan != null) {
            indexHd = tblHoaDon.getSelectedRow();
            if (indexHd == -1) {
                JOptionPane.showMessageDialog(this, "Vui Lòng Chọn Hóa Đơn Để Gán");
                return;
            }
            String mahd = tblHoaDon.getValueAt(indexHd, 1).toString();
            HoaDon hd = hdService.getObj(mahd);

            hd.setKhachHang(khService.getObj(khachHangGan.getMa()));
            hdService.save(hd);

            List<HoaDonChiTiet> lstHdct = hdCtService.getAllByMa(mahd);
            for (HoaDonChiTiet hdct : lstHdct) {
                hdCtService.delete(hdct);
            }

            loadTableHoaDon(hdService.getAllByObj("", 0));
            tblModelGioHang.setRowCount(0);

            JOptionPane.showMessageDialog(this, "Gán Hóa Đơn Thành Công");
        }

    }

    public void taoHoaDon() {
        if (txtMaKh.getText().trim().length() == 0 || txtTenKh.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "Vui Lòng Chọn Loại Khách Hàng");
            return;
        }
        int chk = JOptionPane.showConfirmDialog(this, "Bạn Chắc Muốn Tạo Hóa Đơn");
        if (chk == JOptionPane.YES_OPTION) {
            HoaDon hd = new HoaDon();
            for (int i = 0; i < hdService.getLst().size() + 1; i++) {
                String maHd = "HD00" + i;
                if (hdService.getObj(maHd) == null) {
                    hd.setMa(maHd);
                    break;
                }
            }

            hd.setNgayTao(new Date());
            hd.setNgaySua(new Date());
            hd.setTinhTrang(0);

            hd.setKhachHang(khachHang);
            hd.setNguoiDung(nguoiDung);

            hd.setTongTien(new BigDecimal(0));
            hd.setThanhTien(new BigDecimal(0));
            if (hdService.save(hd)) {
                JOptionPane.showMessageDialog(this, "Tạo Hóa Đơn Thành Công");
            } else {
                JOptionPane.showMessageDialog(this, "Tạo Hóa Đơn Thất Bại");
            }

            loadTableHoaDon(hdService.getAllByObj("", 0));

        }

    }

    public void chonKhuyenMai() {
        KhuyenMaiDlog kmDlog = new KhuyenMaiDlog(new javax.swing.JFrame(), true);
        kmDlog.setVisible(true);

        khuyenMai = kmDlog.getKhuyenMai();
        txtMaKm.setText(khuyenMai.getMa());
        txtTenKm.setText(khuyenMai.getTen());
        tienThanhToan();
    }

    public void tongTien() {
        double tongTien = 0;
        for (int i = 0; i < tblGioHang.getRowCount(); i++) {
            double thanhTien = Double.parseDouble(tblGioHang.getValueAt(i, 7).toString());
            tongTien = tongTien + thanhTien;
        }
        txtTongTien.setText(String.valueOf(tongTien));
        tienThanhToan();
    }

    public void tienThanhToan() {

        double tongTien = Double.valueOf(txtTongTien.getText());
        Double giaGiam = 0.0;
        if (txtTongTien.getText().trim().length() == 0) {
            return;
        }
        if (khuyenMai != null) {
            giaGiam = tongTien * this.khuyenMai.getPhanTramGiam() / 100;
        }
        if (chkTichLy.isSelected() == true) {
            if (khachHangHD != null) {
                giaGiam = giaGiam + (Double.valueOf(khachHangHD.getDiemTichLy()) * 1000);
            }
        }

        txtGiamGia.setText(String.valueOf(giaGiam));
        txtThanhTien.setText(String.valueOf(tongTien - giaGiam));
        tienThua();

    }

    public void tienThua() {
        String tienKhDua = txtTienKhachDua.getText();
        String thanhTien = txtThanhTien.getText();
        Double tienThua = 0.0;
        if (tienKhDua.trim().length() == 0) {
            txtTienThua.setText("");
            return;
        }
        try {
            tienThua = Double.valueOf(tienKhDua) - Double.valueOf(thanhTien);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số");
            e.printStackTrace();
        }
        txtTienThua.setText(String.valueOf(tienThua));

    }

    public void thanhToan() {
        String tienKhachDua = txtTienKhachDua.getText();
        String tienThua = txtTienThua.getText();
        String giaGiam = txtGiamGia.getText();
        String thanhTien = txtThanhTien.getText();
        if (tienKhachDua.trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "Vui Lòng Nhập Tiền Khách Đưa");
            return;
        }

        if (Double.valueOf(tienKhachDua) < Double.valueOf(thanhTien)) {
            JOptionPane.showMessageDialog(this, "Tiền Khách Đưa Phải Lớn Hơn Tiền Cần Thanh Toán");
            return;
        }
        String maHd = txtMaHD.getText();
        if (maHd.trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "Không Thể Thanh Toán Khi Không Chọn Hóa Đơn");
            return;
        }
        HoaDon hd = hdService.getObj(maHd);
        hd.setNgayThanhToan(new Date());
        hd.setNgaySua(new Date());
        hd.setTongTien(new BigDecimal(txtTongTien.getText()));
        hd.setThanhTien(new BigDecimal(txtThanhTien.getText()));
        hd.setTinhTrang(1);
        if (khuyenMai != null) {
            hd.setKhuyenMai(khuyenMai);
            khuyenMai.setSoLuong(khuyenMai.getSoLuong() - 1);
            kmService.save(khuyenMai);
        }

        if (chkTichLy.isSelected() == true && khachHang != null) {
            khachHang.setDiemTichLy(0);
            khService.save(khachHang);
        }

        if (khachHang != null) {
            Double tien = Double.valueOf(thanhTien);
            int diem = 0;

            diem = (int) (tien / 10000);
            khachHang.setDiemTichLy(khachHang.getDiemTichLy() + diem);
            khService.save(khachHang);

        }

        if (hdService.save(hd)) {
            JOptionPane.showMessageDialog(this, "Thanh Toán Thành Công");

            loadTableHoaDon(hdService.getAllByObj("", 0));
            loadTableHoaDonTT(hdService.getAllByObj("", 1));
            int chk = JOptionPane.showConfirmDialog(this, "Bạn Có Muốn In Hóa Đơn");
            if (chk == JOptionPane.YES_OPTION) {
                ExportWord.ExportWord(hd, Double.valueOf(giaGiam), Double.valueOf(tienKhachDua), Double.valueOf(tienThua));
                JOptionPane.showMessageDialog(this, "In Hóa Đơn Thành Công");
            }

            tblModelGioHang.setRowCount(0);
            cleanForm();

        } else {
            JOptionPane.showMessageDialog(this, "Thanh Toán Thất Bại");
        }

    }

    public void hoanTacHoaDon() {
        indexHdTT = tblHoaDonTT.getSelectedRow();
        String ma = tblHoaDonTT.getValueAt(indexHdTT, 1).toString();

        HoaDon hd = hdService.getObj(ma);
        hd.setTinhTrang(0);
        hd.setThanhTien(new BigDecimal(0));
        hd.setTongTien(new BigDecimal(0));
        String moTa = JOptionPane.showInputDialog(this, "Vui lòng nhập lý do");
        if (moTa == null) {
            return;
        }
        hd.setMoTa(moTa);
        hd.setNgaySua(new Date());
        hdService.save(hd);
        loadTableHoaDonTT(hdService.getAllByObj("", 1));
        loadTableHoaDon(hdService.getAllByObj("", 0));

    }

    public void cleanForm() {
        txtMaHD.setText("");
        txtTongTien.setText("");
        txtGiamGia.setText("");
        txtThanhTien.setText("");
        txtTienKhachDua.setText("");
        txtTienThua.setText("");
        lblDiemTichLy.setText("Điểm tích lỹ: 0");
        chkTichLy.setSelected(false);
    }

    public void huyHoaDon() {
        int index = tblHoaDon.getSelectedRow();

        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Vui Lòng Chọn Hóa Đơn");
            return;
        }
        String ma = tblHoaDon.getValueAt(index, 1).toString();
        int chk = JOptionPane.showConfirmDialog(this, "Bạn Có Chắc Muốn Huy Hóa Đơn " + ma);
        if (chk != JOptionPane.YES_OPTION) {
            return;
        }

        for (HoaDonChiTiet hdct : hdCtService.getAllByMa(ma)) {
            ChiTietDep ctd = hdct.getChiTietDep();
            ctd.setSoLuong(ctd.getSoLuong() + hdct.getSoLuong());
            ctdService.save(ctd);
            hdCtService.delete(hdct);
        }

        HoaDon hd = hdService.getObj(ma);
        hd.setTinhTrang(-1);
        hd.setNgaySua(new Date());
        if (hdService.save(hd)) {
            JOptionPane.showMessageDialog(this, "Hủy Hóa Đơn Thành Công");

        } else {
            JOptionPane.showMessageDialog(this, "Hủy Hóa Đơn Thất Bại");

        }

        tblModelGioHang.setRowCount(0);
        loadTableHoaDon(hdService.getAllByObj("", 0));
        loadTableSanPham(ctdService.getAllByObj(0, txtTimKiemSanPham.getText(), 0));

    }

    public void initWebCam() {
//        webCam.close();
        Dimension size = WebcamResolution.QVGA.getSize();
        HomeFrm.webCam = Webcam.getWebcams().get(0);
        HomeFrm.webCam.setViewSize(size);

        webcamPanelBH = new WebcamPanel(HomeFrm.webCam);
        webcamPanelBH.setPreferredSize(size);
        webcamPanelBH.setFPSDisplayed(true);
        webcamPanelBH.setMirrored(true);

        pnlWebCam.add(webcamPanelBH, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, pnlWebCam.getWidth(), pnlWebCam.getHeight()));
        executor.execute(this);
    }

    public boolean isValidDateRange(String startDateString, String endDateString) {
        try {

            Date startDate = sdf.parse(startDateString);
            Date endDate = sdf.parse(endDateString);
            if (startDate.after(endDate)) {
                return false;
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        table1 = new swing.Table();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        txtTimKiemHoaDon = new textfield.TextField();
        button1 = new Utilities.raven.textfield.Button();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblHoaDonTT = new javax.swing.JTable();
        txtTimKiemHoaDonTT = new textfield.TextField();
        btnTraHang = new Utilities.raven.textfield.Button();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblGioHang = new javax.swing.JTable();
        button7 = new Utilities.raven.textfield.Button();
        button8 = new Utilities.raven.textfield.Button();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        txtMaKh = new textfield.TextField();
        txtTenKh = new textfield.TextField();
        btnTaoHD = new swing.Button();
        btnChonKH = new swing.Button();
        btnKhAo = new swing.Button();
        jPanel7 = new javax.swing.JPanel();
        txtMaHD = new textfield.TextField();
        txtGiamGia = new textfield.TextField();
        txtThanhTien = new textfield.TextField();
        txtTienKhachDua = new textfield.TextField();
        txtTienThua = new textfield.TextField();
        txtTenKm = new textfield.TextField();
        btnThanhToan = new swing.Button();
        txtMaKm = new textfield.TextField();
        txtTongTien = new textfield.TextField();
        lblDiemTichLy = new javax.swing.JLabel();
        chkTichLy = new checkbox.JCheckBoxCustom();
        btnThemKm = new swing.Button();
        btnXoaKm = new swing.Button();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        txtTimKiemSanPham = new textfield.TextField();
        jPanel5 = new javax.swing.JPanel();
        pnlWebCam = new javax.swing.JPanel();
        lblOutputQr = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Hóa Đơn"));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã", "Nhân Viên", "Khách Hàng", "Ngày Tạo", "Trạng Thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDon.setGridColor(new java.awt.Color(255, 255, 255));
        tblHoaDon.setSelectionBackground(new java.awt.Color(0, 204, 255));
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHoaDon);

        txtTimKiemHoaDon.setDisabledTextColor(new java.awt.Color(46, 84, 133));
        txtTimKiemHoaDon.setFont(new java.awt.Font("Segoe UI Variable", 0, 12)); // NOI18N
        txtTimKiemHoaDon.setLabelText("Tìm Hóa Đơn");
        txtTimKiemHoaDon.setLineColor(new java.awt.Color(23, 143, 246));
        txtTimKiemHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemHoaDonActionPerformed(evt);
            }
        });
        txtTimKiemHoaDon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemHoaDonKeyReleased(evt);
            }
        });

        button1.setBackground(new java.awt.Color(0, 102, 255));
        button1.setForeground(new java.awt.Color(255, 255, 255));
        button1.setText("Hủy HD");
        button1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(txtTimKiemHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiemHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Chờ Thanh Toán", jPanel8);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        tblHoaDonTT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã", "Nhân Viên", "Khách Hàng", "Ngày Tạo", "Trạng Thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDonTT.setGridColor(new java.awt.Color(255, 255, 255));
        tblHoaDonTT.setSelectionBackground(new java.awt.Color(0, 204, 255));
        tblHoaDonTT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonTTMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblHoaDonTT);

        txtTimKiemHoaDonTT.setDisabledTextColor(new java.awt.Color(46, 84, 133));
        txtTimKiemHoaDonTT.setFont(new java.awt.Font("Segoe UI Variable", 0, 12)); // NOI18N
        txtTimKiemHoaDonTT.setLabelText("Tìm Hóa Đơn");
        txtTimKiemHoaDonTT.setLineColor(new java.awt.Color(23, 143, 246));
        txtTimKiemHoaDonTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemHoaDonTTActionPerformed(evt);
            }
        });
        txtTimKiemHoaDonTT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemHoaDonTTKeyReleased(evt);
            }
        });

        btnTraHang.setBackground(new java.awt.Color(0, 102, 255));
        btnTraHang.setForeground(new java.awt.Color(255, 255, 255));
        btnTraHang.setText("Hoàn Tác");
        btnTraHang.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        btnTraHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraHangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(txtTimKiemHoaDonTT, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTraHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiemHoaDonTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTraHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Đã Thanh Toán", jPanel9);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Giỏ Hàng"));

        tblGioHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã SP", "Tên SP", "Loại", "Size", "Số Lượng", "Đơn Giá", "Thành Tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGioHang.setSelectionBackground(new java.awt.Color(0, 204, 255));
        tblGioHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGioHangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblGioHang);

        button7.setBackground(new java.awt.Color(51, 102, 255));
        button7.setForeground(new java.awt.Color(255, 255, 255));
        button7.setText("Xóa");
        button7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button7ActionPerformed(evt);
            }
        });

        button8.setBackground(new java.awt.Color(51, 102, 255));
        button8.setForeground(new java.awt.Color(255, 255, 255));
        button8.setText("Xóa Tất Cả");
        button8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(105, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {button7, button8});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Thanh Toán"));

        txtMaKh.setLabelText("Mã Khách Hàng");

        txtTenKh.setLabelText("Tên Khách Hàng");

        btnTaoHD.setBackground(new java.awt.Color(0, 153, 255));
        btnTaoHD.setForeground(new java.awt.Color(255, 255, 255));
        btnTaoHD.setText("Tạo Hóa Đơn");
        btnTaoHD.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTaoHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoHDActionPerformed(evt);
            }
        });

        btnChonKH.setBackground(new java.awt.Color(0, 153, 255));
        btnChonKH.setForeground(new java.awt.Color(255, 255, 255));
        btnChonKH.setText("Chọn KH");
        btnChonKH.setToolTipText("");
        btnChonKH.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnChonKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonKHActionPerformed(evt);
            }
        });

        btnKhAo.setBackground(new java.awt.Color(0, 153, 255));
        btnKhAo.setForeground(new java.awt.Color(255, 255, 255));
        btnKhAo.setText("Khách Lẻ");
        btnKhAo.setToolTipText("");
        btnKhAo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnKhAo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKhAoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(btnTaoHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtTenKh, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                            .addComponent(txtMaKh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnKhAo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnChonKH, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaKh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChonKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTenKh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKhAo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(btnTaoHD, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        txtMaHD.setLabelText("Mã Hóa Đơn");

        txtGiamGia.setLabelText("Giảm Giá");

        txtThanhTien.setLabelText("Thành Tiền");

        txtTienKhachDua.setLabelText("Tiền Khách Đưa");
        txtTienKhachDua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTienKhachDuaKeyReleased(evt);
            }
        });

        txtTienThua.setLabelText("Tiền Thừa");

        txtTenKm.setLabelText("Tên Khuyến Mãi");

        btnThanhToan.setBackground(new java.awt.Color(51, 153, 255));
        btnThanhToan.setForeground(new java.awt.Color(255, 255, 255));
        btnThanhToan.setText("Thanh Toán");
        btnThanhToan.setToolTipText("");
        btnThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        txtMaKm.setLabelText("Mã Khuyến Mãi");

        txtTongTien.setLabelText("Tổng Tiền");

        lblDiemTichLy.setText("Điểm tích lỹ: 0");

        chkTichLy.setText("Sử dụng ?");
        chkTichLy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTichLyActionPerformed(evt);
            }
        });

        btnThemKm.setBackground(new java.awt.Color(51, 153, 255));
        btnThemKm.setForeground(new java.awt.Color(255, 255, 255));
        btnThemKm.setText("Thêm KM");
        btnThemKm.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThemKm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemKmActionPerformed(evt);
            }
        });

        btnXoaKm.setBackground(new java.awt.Color(51, 153, 255));
        btnXoaKm.setForeground(new java.awt.Color(255, 255, 255));
        btnXoaKm.setText("Xóa");
        btnXoaKm.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoaKm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaKmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtTienKhachDua, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                            .addComponent(txtThanhTien, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtGiamGia, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTongTien, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtMaHD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTienThua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(btnThemKm, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnXoaKm, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblDiemTichLy)
                            .addComponent(chkTichLy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtTenKm, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                .addComponent(txtMaKm, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaKm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenKm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(txtGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThemKm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXoaKm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(txtTienKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(lblDiemTichLy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkTichLy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(txtTienThua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Sản Phẩm"));

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã", "Tên", "Loại", "Size", "NSX", "Số Lượng Tồn", "Đơn Giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.setSelectionBackground(new java.awt.Color(51, 204, 255));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblSanPham);

        txtTimKiemSanPham.setLabelText("Tìm Kiếm");
        txtTimKiemSanPham.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemSanPhamKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txtTimKiemSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtTimKiemSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "QR"));

        pnlWebCam.setLayout(new javax.swing.BoxLayout(pnlWebCam, javax.swing.BoxLayout.LINE_AXIS));

        lblOutputQr.setText("Output: ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlWebCam, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(lblOutputQr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(pnlWebCam, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblOutputQr))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimKiemHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemHoaDonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemHoaDonActionPerformed

    private void btnTaoHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoHDActionPerformed
        taoHoaDon();
    }//GEN-LAST:event_btnTaoHDActionPerformed

    private void chkTichLyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTichLyActionPerformed
        tienThanhToan();
    }//GEN-LAST:event_chkTichLyActionPerformed

    private void btnThemKmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemKmActionPerformed
        chonKhuyenMai();
    }//GEN-LAST:event_btnThemKmActionPerformed

    private void btnChonKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonKHActionPerformed
        chonKhachHang();
    }//GEN-LAST:event_btnChonKHActionPerformed

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        clickHoaDon();
        tienThanhToan();
    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        clickAddSanPham();
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void tblGioHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGioHangMouseClicked
        clickGioHang();
    }//GEN-LAST:event_tblGioHangMouseClicked

    private void txtTimKiemSanPhamKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemSanPhamKeyReleased
        loadTableSanPham(ctdService.getAllByObj(0, txtTimKiemSanPham.getText(), 0));
    }//GEN-LAST:event_txtTimKiemSanPhamKeyReleased

    private void txtTimKiemHoaDonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemHoaDonKeyReleased
        loadTableHoaDon(hdService.getAllByObj(txtTimKiemHoaDon.getText(), 0));
    }//GEN-LAST:event_txtTimKiemHoaDonKeyReleased

    private void btnKhAoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKhAoActionPerformed
        this.khachHang = null;
        txtMaKh.setText("Khách Lẻ");
        txtTenKh.setText("Khách Lẻ");
    }//GEN-LAST:event_btnKhAoActionPerformed

    private void btnXoaKmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaKmActionPerformed
        this.khuyenMai = null;
        txtMaKm.setText("");
        txtTenKm.setText("");
        tienThanhToan();
    }//GEN-LAST:event_btnXoaKmActionPerformed

    private void txtTienKhachDuaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienKhachDuaKeyReleased
        tienThua();
    }//GEN-LAST:event_txtTienKhachDuaKeyReleased

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        thanhToan();
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button7ActionPerformed
        deleteGioHang();
    }//GEN-LAST:event_button7ActionPerformed

    private void button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button8ActionPerformed
        deleteAllGioHang();
    }//GEN-LAST:event_button8ActionPerformed

    private void tblHoaDonTTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonTTMouseClicked
        clickHoaDonTT();
    }//GEN-LAST:event_tblHoaDonTTMouseClicked

    private void txtTimKiemHoaDonTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemHoaDonTTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemHoaDonTTActionPerformed

    private void txtTimKiemHoaDonTTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemHoaDonTTKeyReleased
        loadTableHoaDonTT(hdService.getAllByObj(txtTimKiemHoaDonTT.getText(), 1));
    }//GEN-LAST:event_txtTimKiemHoaDonTTKeyReleased

    private void btnTraHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraHangActionPerformed
        hoanTacHoaDon();
    }//GEN-LAST:event_btnTraHangActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        huyHoaDon();
    }//GEN-LAST:event_button1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private swing.Button btnChonKH;
    private swing.Button btnKhAo;
    private swing.Button btnTaoHD;
    private swing.Button btnThanhToan;
    private swing.Button btnThemKm;
    private Utilities.raven.textfield.Button btnTraHang;
    private swing.Button btnXoaKm;
    private Utilities.raven.textfield.Button button1;
    private Utilities.raven.textfield.Button button7;
    private Utilities.raven.textfield.Button button8;
    private checkbox.JCheckBoxCustom chkTichLy;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblDiemTichLy;
    private javax.swing.JLabel lblOutputQr;
    private javax.swing.JPanel pnlWebCam;
    private swing.Table table1;
    private javax.swing.JTable tblGioHang;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTable tblHoaDonTT;
    private javax.swing.JTable tblSanPham;
    private textfield.TextField txtGiamGia;
    private textfield.TextField txtMaHD;
    private textfield.TextField txtMaKh;
    private textfield.TextField txtMaKm;
    private textfield.TextField txtTenKh;
    private textfield.TextField txtTenKm;
    private textfield.TextField txtThanhTien;
    private textfield.TextField txtTienKhachDua;
    private textfield.TextField txtTienThua;
    private textfield.TextField txtTimKiemHoaDon;
    private textfield.TextField txtTimKiemHoaDonTT;
    private textfield.TextField txtTimKiemSanPham;
    private textfield.TextField txtTongTien;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        while (true) {
            try {
                Thread.sleep(100);
            } catch (Exception e) {
            }

            Result result = null;
            BufferedImage image = null;

            if (HomeFrm.webCam.isOpen()) {
                image = HomeFrm.webCam.getImage();
                if (image == null) {
                    continue;
                }
            }
            LuminanceSource source = new BufferedImageLuminanceSource(image);
            BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));

            try {
                result = new MultiFormatReader().decode(bitmap);
            } catch (Exception e) {
            }
            if (result != null) {
                System.out.println("Code: " + result.getText());
                lblOutputQr.setText("Output: " + result.getText());
                this.khuyenMai = kmService.getObj(result.getText());
                if (this.khuyenMai != null) {
                    lblOutputQr.setText("Output: Khuyến Mãi " + result.getText());
                    if (khuyenMai.getTinhTrang() == 1) {
                        JOptionPane.showMessageDialog(this, "Khuyến Mại Đã Hết Hạn");
                        khuyenMai = null;
                        return;
                    }
                    Date ngayHomNay = new Date();
                    if (isValidDateRange(sdf.format(ngayHomNay), sdf.format(khuyenMai.getNgayBatDau())) == true) {
                        JOptionPane.showMessageDialog(this, "Khuyến Mại Chưa Đến Ngày Bắt Đầu");
                        khuyenMai = null;
                        return;
                    }
                    int chk = JOptionPane.showConfirmDialog(this, "Tìm Thấy Khuyến Mãi " + khuyenMai.getTen() + " \n Bạn Chắc Muỗn Thêm Khuyến Mãi");
                    if (chk == JOptionPane.YES_OPTION) {
                        txtMaKm.setText(khuyenMai.getMa());
                        txtTenKm.setText(khuyenMai.getTen());
                        tienThanhToan();
                    } else {
                        this.khuyenMai = null;
                        txtMaKm.setText("");
                        txtTenKm.setText("");
                    }

                }

                ChiTietDep ctd = null;
                ctd = ctdService.getObj(result.getText());
                if (ctd != null) {
                    lblOutputQr.setText("Output: Sản Phẩm " + result.getText());

                    indexHd = tblHoaDon.getSelectedRow();
                    if (indexHd == -1) {
                        JOptionPane.showMessageDialog(this, "Vui Lòng Chọn Hóa Đơn");
                        ctd = null;
                        return;
                    }
                    String maHd = tblHoaDon.getValueAt(indexHd, 1).toString();
                    HoaDon hd = hdService.getObj(maHd);
                    HoaDonChiTiet hdctGioHang = null;
                    hdctGioHang = hdCtService.getObj(hd.getId(), ctd.getId());
                    if (hdctGioHang != null) {
                        hdctGioHang.setSoLuong(hdctGioHang.getSoLuong() + 1);
                        hdctGioHang.setNgaySua(new Date());
                        ctd.setSoLuong(ctd.getSoLuong() - 1);
                        ctd.setNgaySua(new Date());
                        ctdService.save(ctd);
                        hdCtService.save(hdctGioHang);
                        JOptionPane.showMessageDialog(this, "Thêm Sản phẩm " + ctd.getDep().getTen() + "Thành Công");
                    } else {
                        HoaDonChiTiet hdct = new HoaDonChiTiet();
                        hdct.setChiTietDep(ctd);
                        hdct.setHoaDon(hd);
                        hdct.setNgayTao(new Date());
                        hdct.setNgaySua(new Date());
                        hdct.setSoLuong(1);
                        hdct.setDonGia(ctd.getGiaBan());
                        ctd.setSoLuong(ctd.getSoLuong() - 1);
                        ctd.setNgaySua(new Date());

                        ctdService.save(ctd);
                        hdCtService.save(hdct);
                        JOptionPane.showMessageDialog(this, "Thêm Sản phẩm " + ctd.getDep().getTen() + "Thành Công");

                    }

                    loadTableGioHang(hdCtService.getAllByMa(maHd));
                    loadTableSanPham(ctdService.getAllByObj(0, txtTimKiemSanPham.getText(), 0));

                }
            }

        }
    }

    @Override
    public Thread newThread(Runnable r) {
        Thread t = new Thread(r, "My Thread");
        t.setDaemon(true);
        return t;
    }
}

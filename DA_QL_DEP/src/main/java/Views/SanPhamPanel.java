/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Views;

import Models.ChatLieu;
import Models.ChiTietDep;
import Models.Dep;
import Models.LoaiDep;
import Models.MauSac;
import Models.NguoiDung;
import Models.Nsx;
import Models.Size;
import Services.IChatLieuService;
import Services.IChiTietDepService;
import Services.IDepService;
import Services.ILoaiDepService;
import Services.IMauSacService;
import Services.INsxService;
import Services.ISizeService;
import Services.implement.ChatLieuService;
import Services.implement.ChiTietDepService;
import Services.implement.DepService;
import Services.implement.LoaiDepService;
import Services.implement.MauSacService;
import Services.implement.NsxService;
import Services.implement.SizeService;
import Utilities.ExportFile.ExportSP;
import Utilities.GenBarcode;
import Utilities.ImportFile.ImportSP;
import Utilities.ImageUltil;
import Utilities.ImportFile.ImportNV;
import java.io.File;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class SanPhamPanel extends javax.swing.JPanel {

    int index = -1;
    String url = null;
    String maVach = null;
    IChatLieuService clService;
    ISizeService sizeService;
    ILoaiDepService ldService;
    IMauSacService msService;
    INsxService nsxService;
    IChiTietDepService ctdService;
    IDepService depService;
    DefaultTableModel tblModelSp;
    ImageUltil imageUltil;
    SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");

    public SanPhamPanel() {
        initComponents();

        clService = new ChatLieuService();
        sizeService = new SizeService();
        ldService = new LoaiDepService();
        msService = new MauSacService();
        nsxService = new NsxService();
        ctdService = new ChiTietDepService();
        depService = new DepService();
        imageUltil = new ImageUltil();
        tblModelSp = (DefaultTableModel) tblSanPham.getModel();

        intCbo();
        cleanForm();
        txtMaSp.setEnabled(false);
        loadTableSanPham(ctdService.getLstByTen(txtTimKiemSp.getText()));
        cboFindLoc.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void intCbo() {
        initCboChatLieu();
        initCboSize();
        initCboLoai();
        initCboMauSac();
        initCboNsx();

    }

    public void initCboChatLieu() {
        DefaultComboBoxModel<ChatLieu> boxModel = new DefaultComboBoxModel<>();
        cboChatLieu.removeAllItems();
        cboChatLieu.setModel((DefaultComboBoxModel) boxModel);

        for (ChatLieu chatLieu : clService.getLst()) {
            boxModel.addElement(chatLieu);
        }

    }

    public void initCboSize() {
        DefaultComboBoxModel<Size> boxModel = new DefaultComboBoxModel<>();
        cboSize.removeAllItems();
        cboSize.setModel((DefaultComboBoxModel) boxModel);

        for (Size size : sizeService.getLst()) {
            boxModel.addElement(size);
        }

    }

    public void initCboLoai() {
        DefaultComboBoxModel<LoaiDep> boxModel = new DefaultComboBoxModel<>();
        cboLoai.removeAllItems();
        cboLoai.setModel((DefaultComboBoxModel) boxModel);

        for (LoaiDep ld : ldService.getLst()) {
            boxModel.addElement(ld);
        }

    }

    public void initCboMauSac() {
        DefaultComboBoxModel<MauSac> boxModel = new DefaultComboBoxModel<>();
        cboMauSac.removeAllItems();
        cboMauSac.setModel((DefaultComboBoxModel) boxModel);

        for (MauSac ms : msService.getLst()) {
            boxModel.addElement(ms);
        }

    }

    public void initCboNsx() {
        DefaultComboBoxModel<Nsx> boxModel = new DefaultComboBoxModel<>();
        cboNsx.removeAllItems();
        cboNsx.setModel((DefaultComboBoxModel) boxModel);

        for (Nsx nsx : nsxService.getLst()) {
            boxModel.addElement(nsx);
        }

    }

    public void loadTableSanPham(List<ChiTietDep> lst) {
        int i = 0;
        tblModelSp.setRowCount(0);

        for (ChiTietDep ctd : lst) {
            tblModelSp.addRow(new Object[]{
                ++i,
                ctd.getDep().getMa(),
                ctd.getDep().getTen(),
                ctd.getSoLuong(),
                ctd.getGiaNhap(),
                ctd.getGiaBan(),
                ctd.getLoaiDep().getTen(),
                ctd.getSize().getKichCo(),
                ctd.getChatLieu().getTen(),
                ctd.getMauSac().getMauSac(),
                ctd.getNsx().getTen(),
                ctd.getMoTa(),
                ctd.getNgayTao() == null ? "" : sdf.format(ctd.getNgayTao()),
                ctd.getNgaySua() == null ? "" : sdf.format(ctd.getNgaySua()),
                ctd.getTinhTrang() == 0 ? "Ðang Kinh Doanh" : "Ngừng Kinh Doanh"
            });
        }
    }

    public void clickTableSanPham() {
        index = tblSanPham.getSelectedRow();

        String ma = tblModelSp.getValueAt(index, 1).toString();
        ChiTietDep ctd = ctdService.getObj(ma);

        String ten = tblModelSp.getValueAt(index, 2).toString();
        String soLuong = tblModelSp.getValueAt(index, 3).toString();
        String giaNhap = tblModelSp.getValueAt(index, 4).toString();
        String giaBan = tblModelSp.getValueAt(index, 5).toString();
        Object loai = tblModelSp.getValueAt(index, 6);
        Object size = tblModelSp.getValueAt(index, 7);
        Object chatLieu = tblModelSp.getValueAt(index, 8);
        Object mauSac = tblModelSp.getValueAt(index, 9);
        Object nsx = tblModelSp.getValueAt(index, 10);

        String moTa = tblModelSp.getValueAt(index, 11).toString();
        String trangThai = tblModelSp.getValueAt(index, 14).toString();
        txtMaSp.setText(ma);
        txtTenSp.setText(ten);
        txtSoLuong.setText(soLuong);
        txtGiaNhap.setText(giaNhap);
        txtGiaBan.setText(giaBan);
        txtMoTa.setText(moTa);
        url = ctd.getDep().getHinhAnh().toString();
        maVach = ctd.getMaVach() == null ? "default.jpg" : ctd.getMaVach().toString();
        lblAnhSp.setIcon(imageUltil.KichThuocIcon(new ImageIcon("./images/SanPham/" + url), lblAnhSp.getWidth(), lblAnhSp.getHeight()));
        lblMaVach.setIcon(imageUltil.KichThuocIcon(new ImageIcon("./QR/SanPham/" + maVach), lblMaVach.getWidth(), lblMaVach.getHeight()));

        if (trangThai.equalsIgnoreCase("Ðang Kinh Doanh")) {
            rdoDangKD.setSelected(true);
        } else {
            rdoNgungKD.setSelected(true);
        }

        int loaiCount = cboLoai.getItemCount();
        for (int i = 0; i < loaiCount; i++) {
            Object l = cboLoai.getItemAt(i);
            if (l.toString().equals(loai.toString())) {
                cboLoai.setSelectedIndex(i);
                break;
            }
        }

        int sizeCount = cboSize.getItemCount();
        for (int i = 0; i < sizeCount; i++) {
            Object s = cboSize.getItemAt(i);
            if (s.toString().equals(size.toString())) {
                cboSize.setSelectedIndex(i);
                break;
            }
        }
        int chatLieuCount = cboChatLieu.getItemCount();
        for (int i = 0; i < chatLieuCount; i++) {
            Object cl = cboChatLieu.getItemAt(i);
            if (cl.toString().equals(chatLieu.toString())) {
                cboChatLieu.setSelectedIndex(i);
                break;
            }
        }
        int mauSacCount = cboMauSac.getItemCount();
        for (int i = 0; i < mauSacCount; i++) {
            Object ms = cboMauSac.getItemAt(i);
            if (ms.toString().equals(mauSac.toString())) {
                cboMauSac.setSelectedIndex(i);
                break;
            }
        }
        int nsxCount = cboNsx.getItemCount();
        for (int i = 0; i < nsxCount; i++) {
            Object n = cboNsx.getItemAt(i);
            if (n.toString().equals(nsx)) {
                cboNsx.setSelectedIndex(i);
                break;
            }
        }

    }

    public void cleanForm() {
        txtMaSp.setText("");
        txtTenSp.setText("");
        txtSoLuong.setText("");
        txtMaSp.setText("");
        txtGiaBan.setText("");
        txtGiaNhap.setText("");
        txtMoTa.setText("");
        cboChatLieu.setSelectedIndex(0);
        cboLoai.setSelectedIndex(0);
        cboNsx.setSelectedIndex(0);
        cboMauSac.setSelectedIndex(0);
        cboSize.setSelectedIndex(0);
        url = null;
        lblAnhSp.setIcon(null);
        lblMaVach.setIcon(null);
        rdoDangKD.setSelected(true);
        setMaSP();
    }

    public void setMaSP() {
        for (int i = 0; i < depService.getLst().size() + 1; i++) {
            String ma = "D00" + i;
            if (depService.getObj(ma) == null) {
                txtMaSp.setText(ma);
            }
        }

    }

    //San Pham
    public ChiTietDep getFormSanPham() {
        ChiTietDep ctd = new ChiTietDep();

        String giaNhapStr = txtGiaNhap.getText();
        String giaBanStr = txtGiaBan.getText();
        String soLuongStr = txtSoLuong.getText();
        String moTa = txtMoTa.getText();

        ChatLieu cl = (ChatLieu) cboChatLieu.getSelectedItem();
        Size size = (Size) cboSize.getSelectedItem();
        LoaiDep ld = (LoaiDep) cboLoai.getSelectedItem();
        MauSac ms = (MauSac) cboMauSac.getSelectedItem();
        Nsx nsx = (Nsx) cboNsx.getSelectedItem();
        if (txtTenSp.getText().trim().length() == 0 || giaNhapStr.trim().length() == 0 || giaBanStr.trim().length() == 0 || soLuongStr.trim().length() == 0 || moTa.trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "Không được để trống");
            return null;
        }

        Integer soLuong = 0;
        Double giaBan = 0.0;
        Double giaNhap = 0.0;
        try {
            soLuong = Integer.valueOf(soLuongStr);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng là số");
            return null;
        }
        try {
            giaBan = Double.valueOf(giaBanStr);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập giá bán là số");
            return null;
        }
        try {
            giaNhap = Double.valueOf(giaNhapStr);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập giá nhập là số");
            return null;
        }
        if (soLuong <= 0) {
            JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0");
            return null;
        }
        if (giaBan <= 0) {
            JOptionPane.showMessageDialog(this, "Giá bán phải lớn hơn 0");
            return null;
        }
        if (giaNhap <= 0) {
            JOptionPane.showMessageDialog(this, "Giá nhập phải lớn hơn 0");
            return null;
        }
        if (giaBan < giaNhap) {
            JOptionPane.showMessageDialog(this, "Giá bán phải lớn hơn hoặc bằng giá nhập");
            return null;
        }

        int trangThai = 0;
        if (rdoDangKD.isSelected() == true) {
            trangThai = 0;
        } else {
            trangThai = 1;
        }

        ctd.setSoLuong(soLuong);
        ctd.setGiaBan(new BigDecimal(giaBan));
        ctd.setGiaNhap(new BigDecimal(giaNhap));
        ctd.setMoTa(moTa);
        ctd.setTinhTrang(trangThai);
        ctd.setNgayTao(new Date());
        ctd.setNgaySua(new Date());

        ctd.setChatLieu(cl);
        ctd.setSize(size);
        ctd.setLoaiDep(ld);
        ctd.setSize(size);
        ctd.setNsx(nsx);
        ctd.setMauSac(ms);

        return ctd;
    }

    public void addSanPham() {

        Dep d = new Dep();
        ChiTietDep ctDep = getFormSanPham();
        if (ctDep == null) {
            return;
        }
        for (int i = 0; i < depService.getLst().size() + 1; i++) {
            String maDep = "D00" + i;
            if (depService.getObj(maDep) == null) {
                d.setMa(maDep);
            }
        }
        if (url == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ảnh");
            return;
        }
        String ten = txtTenSp.getText();
        d.setTen(ten);
        d.setHinhAnh(url);
        depService.save(d);
        ChiTietDep ctd = new ChiTietDep();
        ctd.setDep(d);

        ctd.setSoLuong(ctDep.getSoLuong());
        ctd.setGiaBan(ctDep.getGiaBan());
        ctd.setGiaNhap(ctDep.getGiaNhap());
        ctd.setMoTa(ctDep.getMoTa());
        ctd.setTinhTrang(ctDep.getTinhTrang());
        ctd.setNgayTao(ctDep.getNgayTao());
        ctd.setNgaySua(ctDep.getNgaySua());

        ctd.setChatLieu(ctDep.getChatLieu());
        ctd.setSize(ctDep.getSize());
        ctd.setLoaiDep(ctDep.getLoaiDep());
        ctd.setSize(ctDep.getSize());
        ctd.setNsx(ctDep.getNsx());
        ctd.setMauSac(ctDep.getMauSac());

        if (ctdService.save(ctd)) {
            JOptionPane.showMessageDialog(this, "Thêm Sản Phẩm Thành Công");
        } else {
            JOptionPane.showMessageDialog(this, "Thêm Sản Phẩm Thất Bại");
        }

        loadTableSanPham(ctdService.getLstByTen(txtTimKiemSp.getText()));

    }

    public void updateSanPham() {

        index = tblSanPham.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm");
            return;
        }
        ChiTietDep ctDep = getFormSanPham();
        if (ctDep == null) {
            return;
        }
        if (url == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ảnh");
            return;
        }

        String ma = tblModelSp.getValueAt(index, 1).toString();

        Dep d = depService.getObj(ma);
        d.setTen(txtTenSp.getText());
        d.setHinhAnh(url);

        ChiTietDep ctd = ctdService.getObj(ma);
        ctd.setDep(d);

        ctd.setSoLuong(ctDep.getSoLuong());
        ctd.setGiaBan(ctDep.getGiaBan());
        ctd.setGiaNhap(ctDep.getGiaNhap());
        ctd.setMoTa(ctDep.getMoTa());
        ctd.setTinhTrang(ctDep.getTinhTrang());
        ctd.setNgayTao(ctDep.getNgayTao());
        ctd.setNgaySua(ctDep.getNgaySua());

        ctd.setChatLieu(ctDep.getChatLieu());
        ctd.setSize(ctDep.getSize());
        ctd.setLoaiDep(ctDep.getLoaiDep());
        ctd.setSize(ctDep.getSize());
        ctd.setNsx(ctDep.getNsx());
        ctd.setMauSac(ctDep.getMauSac());
        int chk = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn sửa");
        if (chk != JOptionPane.YES_OPTION) {
            return;
        }
        if (ctdService.save(ctd)) {
            depService.save(d);
            JOptionPane.showMessageDialog(this, "Sửa Sản Phẩm Thành Công");
        } else {
            JOptionPane.showMessageDialog(this, "Sửa Sản Phẩm Thất Bại");
        }

        loadTableSanPham(ctdService.getLst());
//        loadTableSanPham(ctdService.getLstByTen(txtTimKiemSp.getText()));
    }

    //Không hể xóa vì có hóa Đơn :<<
//    public void deleteSanPham() {
//
//        index = tblSanPham.getSelectedRow();
//        if (index == -1) {
//            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm");
//            return;
//        }
//
//        String ma = tblModelSp.getValueAt(index, 1).toString();
//
//        Dep d = depService.getObj(ma);
//        ChiTietDep ctd = ctdService.getObj(ma);
//
//        int chk = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa");
//        if (chk != JOptionPane.YES_OPTION) {
//            return;
//        }
//        depService.delete(d);
//        if (ctdService.delete(ctd)) {
//            JOptionPane.showMessageDialog(this, "Xóa Sản Phẩm Thành Công");
//        } else {
//            JOptionPane.showMessageDialog(this, "Xóa Sản Phẩm Thất Bại");
//        }
//
//        loadTableSanPham(ctdService.getLstByTen(txtTimKiemSp.getText()));
//    }
    public void taoQr() {
        index = tblSanPham.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Vui Lòng Chọn Sản Phẩm Cần Tạo");
            return;
        }

        String maSp = tblSanPham.getValueAt(index, 1).toString();

        JFileChooser fileChooser = new JFileChooser("./QR/SanPham/");
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".jpg", "jpg");
        fileChooser.setFileFilter(filter);

        fileChooser.setDialogTitle("Tạo QR Sản Phẩm");
        fileChooser.setSelectedFile(new File(maSp));
        int result = fileChooser.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            try {
                int chk = JOptionPane.showConfirmDialog(this, "Xác nhận Tạo Bar Code ?");
                if (chk == JOptionPane.YES_OPTION) {
                    GenBarcode.GenBarcode(fileToSave.getAbsolutePath() + filter.getDescription(), maSp);
                    JOptionPane.showMessageDialog(this, "Xuất Bar Code thành công");
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Xuất Bar Code thất bại");
                return;
            }
            ChiTietDep ctd = ctdService.getObj(maSp);
            ctd.setMaVach(maSp + ".jpg");
            ctdService.save(ctd);
            loadTableSanPham(ctdService.getLstByTen(txtTimKiemSp.getText()));
            cleanForm();
            System.out.println("Save as QR: " + "./QR/SanPham/" + maSp + ".jpg");
        }
    }

    public void FindLoc() {
//        txtTimKiemSp.setText("");
        int index = cboFindLoc.getSelectedIndex();
        if (index == 1) {
            loadTableSanPham(ctdService.getAllBySoLuong(0, txtTimKiemSp.getText()));
        } else if (index == 2) {
            loadTableSanPham(ctdService.getAllByTinhTrang(0, txtTimKiemSp.getText()));

        } else if (index == 3) {
            loadTableSanPham(ctdService.getAllByTinhTrang(1, txtTimKiemSp.getText()));
        } else {
            loadTableSanPham(ctdService.getLstByTen(txtTimKiemSp.getText()));
        }

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        txtMaSp = new textfield.TextField();
        txtTenSp = new textfield.TextField();
        txtSoLuong = new textfield.TextField();
        txtGiaNhap = new textfield.TextField();
        txtGiaBan = new textfield.TextField();
        cboLoai = new combobox.Combobox();
        cboSize = new combobox.Combobox();
        cboChatLieu = new combobox.Combobox();
        cboNsx = new combobox.Combobox();
        cboMauSac = new combobox.Combobox();
        jPanel2 = new javax.swing.JPanel();
        lblAnhSp = new javax.swing.JLabel();
        txtMoTa = new textfield.TextField();
        rdoDangKD = new radio_button.RadioButtonCustom();
        rdoNgungKD = new radio_button.RadioButtonCustom();
        jLabel3 = new javax.swing.JLabel();
        btnThem = new swing.Button();
        btnSua = new swing.Button();
        btn_QLCT = new swing.Button();
        btnXoa1 = new swing.Button();
        btnThem1 = new swing.Button();
        jLabel2 = new javax.swing.JLabel();
        lblMaVach = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        txtTimKiemSp = new textfield.TextField();
        button5 = new swing.Button();
        button6 = new swing.Button();
        cboFindLoc = new combo_suggestion.ComboBoxSuggestion();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Variable", 1, 16)); // NOI18N
        jLabel1.setText("Thông Tin Sản Phẩm");

        jSeparator1.setForeground(new java.awt.Color(51, 51, 51));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel1.setForeground(new java.awt.Color(153, 153, 153));

        txtMaSp.setLabelText("Mã Sản Phẩm");

        txtTenSp.setLabelText("Tên Sản Phẩm");

        txtSoLuong.setLabelText("Số Lượng");

        txtGiaNhap.setLabelText("Giá Nhập");
        txtGiaNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGiaNhapActionPerformed(evt);
            }
        });

        txtGiaBan.setLabelText("Giá Bán");

        cboLoai.setLabeText("Loại");
        cboLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiActionPerformed(evt);
            }
        });

        cboSize.setLabeText("Size");

        cboChatLieu.setLabeText("Chất Liệu");

        cboNsx.setLabeText("Nhà Sản Xuất");

        cboMauSac.setLabeText("Màu Sắc");
        cboMauSac.setLightWeightPopupEnabled(false);

        lblAnhSp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAnhSpMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAnhSp, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAnhSp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        txtMoTa.setLabelText("Mô Tả");
        txtMoTa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMoTaActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoDangKD);
        rdoDangKD.setForeground(new java.awt.Color(51, 51, 51));
        rdoDangKD.setText("Ðang Kinh Doanh");
        rdoDangKD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDangKDActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoNgungKD);
        rdoNgungKD.setForeground(new java.awt.Color(51, 51, 51));
        rdoNgungKD.setText("Ngừng Kinh Doanh");

        jLabel3.setBackground(new java.awt.Color(204, 204, 204));
        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setText("Trạng Thái");

        btnThem.setBackground(new java.awt.Color(102, 255, 102));
        btnThem.setForeground(new java.awt.Color(51, 51, 51));
        btnThem.setText("Thêm");
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 204, 0));
        btnSua.setForeground(new java.awt.Color(51, 51, 51));
        btnSua.setText("Sửa");
        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btn_QLCT.setBackground(new java.awt.Color(102, 153, 255));
        btn_QLCT.setForeground(new java.awt.Color(51, 51, 51));
        btn_QLCT.setText("Quản Lý Chi Tiết");
        btn_QLCT.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_QLCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_QLCTActionPerformed(evt);
            }
        });

        btnXoa1.setBackground(new java.awt.Color(0, 153, 255));
        btnXoa1.setForeground(new java.awt.Color(51, 51, 51));
        btnXoa1.setText("Clean");
        btnXoa1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoa1ActionPerformed(evt);
            }
        });

        btnThem1.setBackground(new java.awt.Color(102, 255, 102));
        btnThem1.setForeground(new java.awt.Color(51, 51, 51));
        btnThem1.setText("Tạo Bar Code");
        btnThem1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThem1ActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(204, 204, 204));
        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("Mã vạch:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTenSp, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(txtMaSp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addComponent(lblMaVach, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtGiaBan, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                .addComponent(txtGiaNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboChatLieu, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                    .addComponent(cboSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cboNsx, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                    .addComponent(cboMauSac, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(txtMoTa, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cboLoai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(rdoDangKD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rdoNgungKD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(577, 577, 577)
                        .addComponent(btnThem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_QLCT, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cboChatLieu, cboLoai, cboMauSac, cboNsx, cboSize, txtGiaBan, txtGiaNhap, txtMaSp, txtSoLuong, txtTenSp});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnSua, btnThem});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaSp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGiaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboChatLieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboMauSac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMoTa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenSp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboNsx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cboLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rdoDangKD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rdoNgungKD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblMaVach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_QLCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã", "Tên Sản Phẩm", "Số Lượng", "Giá Nhập", "Giá Bán", "Loại", "Size", "Chất Liệu", "Màu Sắc", "Nhà Sản Xuất", "Mô Tả", "Ngày Thêm", "Ngày Sửa", "Trạng Thái"
            }
        ));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSanPham);

        txtTimKiemSp.setLabelText("Tìm Kiếm");
        txtTimKiemSp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemSpKeyReleased(evt);
            }
        });

        button5.setBackground(new java.awt.Color(0, 204, 51));
        button5.setForeground(new java.awt.Color(51, 51, 51));
        button5.setText(" Import File");
        button5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button5ActionPerformed(evt);
            }
        });

        button6.setBackground(new java.awt.Color(0, 204, 0));
        button6.setForeground(new java.awt.Color(51, 51, 51));
        button6.setText(" Export File");
        button6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button6ActionPerformed(evt);
            }
        });

        cboFindLoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cboFindLoc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Sản Phẩm Hết Hàng", "Sản Phẩm Đang Kinh Doanh", "Sản Phẩm Ngừng Kinh Doanh" }));
        cboFindLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboFindLocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtTimKiemSp, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboFindLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78))))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {button5, button6});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtTimKiemSp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboFindLoc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtGiaNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGiaNhapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGiaNhapActionPerformed

    private void cboLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboLoaiActionPerformed

    private void txtMoTaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMoTaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMoTaActionPerformed

    private void rdoDangKDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDangKDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoDangKDActionPerformed

    private void btn_QLCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_QLCTActionPerformed

        QLCTDLog spDailog = new QLCTDLog(new javax.swing.JFrame(), true);
        spDailog.setVisible(true);

        intCbo();
    }//GEN-LAST:event_btn_QLCTActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        clickTableSanPham();
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        addSanPham();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoa1ActionPerformed
        cleanForm();
    }//GEN-LAST:event_btnXoa1ActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        updateSanPham();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void lblAnhSpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAnhSpMouseClicked
        try {
            JFileChooser chonFile = new JFileChooser("./images/SanPham/");
            chonFile.showOpenDialog(null);
            File anh = chonFile.getSelectedFile();
            url = anh.getAbsolutePath();

            lblAnhSp.setIcon(imageUltil.KichThuocIcon(new ImageIcon(url), lblAnhSp.getWidth(), lblAnhSp.getHeight()));

            File file = new File(url);
            file.renameTo(new File("./images/SanPham/" + file.getName()));
            url = file.getName();

        } catch (Exception e) {
        }
    }//GEN-LAST:event_lblAnhSpMouseClicked

    private void btnThem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThem1ActionPerformed
        taoQr();
    }//GEN-LAST:event_btnThem1ActionPerformed

    private void txtTimKiemSpKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemSpKeyReleased
//        cboFindLoc.setSelectedIndex(0);
//        loadTableSanPham(ctdService.getLstByTen(txtTimKiemSp.getText()));
        FindLoc();
    }//GEN-LAST:event_txtTimKiemSpKeyReleased

    private void button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button6ActionPerformed
        JFileChooser fileChooser = new JFileChooser("./file/");
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".xlsx", "xlsx");
        fileChooser.setFileFilter(filter);
        fileChooser.setDialogTitle("Export Excel");
        int result = fileChooser.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            try {
                int chk = JOptionPane.showConfirmDialog(this, "Xác nhận xuất file ?");
                if (chk == JOptionPane.YES_OPTION) {
                    ExportSP.writeExcel(ctdService.getLst(), fileToSave.getAbsolutePath() + filter.getDescription());
                    JOptionPane.showMessageDialog(this, "Xuất File Excel thành công");

                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Xuất File Excel thất bại");
            }
            System.out.println("Save as file: " + fileToSave.getAbsolutePath() + filter.getDescription());
            cleanForm();
            loadTableSanPham(ctdService.getLstByTen(txtTimKiemSp.getText()));

        }
    }//GEN-LAST:event_button6ActionPerformed

    private void button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button5ActionPerformed
        JFileChooser fileChooser = new JFileChooser("./file/");
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".xlsx", "xlsx");
        fileChooser.setFileFilter(filter);
        fileChooser.setDialogTitle("Import Excel");
        int result = fileChooser.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File fileOpen = fileChooser.getSelectedFile();
            try {
                List<ChiTietDep> list = ImportSP.readExcel(fileOpen.getAbsolutePath());
                int chk = JOptionPane.showConfirmDialog(this, "Xác nhận thêm " + list.size() + " sản phẩm ?");
                if (chk == JOptionPane.YES_OPTION) {
                    for (ChiTietDep x : list) {
//                        ChiTietDep ctd = ctdService.getFindAllObj(x.getDep().getId(), x.getLoaiDep().getId(), x.getSize().getId(), x.getMauSac().getId(), x.getChatLieu().getId(), x.getNsx().getId());
                        ChiTietDep ctd = ctdService.getObj(x.getDep().getMa());
                        if (ctd != null) {
                            ctd.setSoLuong(ctd.getSoLuong() + x.getSoLuong());
                            ctd.setNgaySua(new Date());
                            ctdService.save(ctd);
                            continue;
                        } else {
                            ctdService.save(x);
                        }

                    }
                    JOptionPane.showMessageDialog(this, "Thêm File Excel thành công");
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Thêm File Excel thất bại");
            }
            System.out.println("Save as file: " + fileOpen.getAbsolutePath());
            loadTableSanPham(ctdService.getLstByTen(txtTimKiemSp.getText()));

        }
    }//GEN-LAST:event_button5ActionPerformed

    private void cboFindLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboFindLocActionPerformed
        txtTimKiemSp.setText("");
        FindLoc();
    }//GEN-LAST:event_cboFindLocActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private swing.Button btnSua;
    private swing.Button btnThem;
    private swing.Button btnThem1;
    private swing.Button btnXoa1;
    private swing.Button btn_QLCT;
    private swing.Button button5;
    private swing.Button button6;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private combobox.Combobox cboChatLieu;
    private combo_suggestion.ComboBoxSuggestion cboFindLoc;
    private combobox.Combobox cboLoai;
    private combobox.Combobox cboMauSac;
    private combobox.Combobox cboNsx;
    private combobox.Combobox cboSize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAnhSp;
    private javax.swing.JLabel lblMaVach;
    private radio_button.RadioButtonCustom rdoDangKD;
    private radio_button.RadioButtonCustom rdoNgungKD;
    private javax.swing.JTable tblSanPham;
    private textfield.TextField txtGiaBan;
    private textfield.TextField txtGiaNhap;
    private textfield.TextField txtMaSp;
    private textfield.TextField txtMoTa;
    private textfield.TextField txtSoLuong;
    private textfield.TextField txtTenSp;
    private textfield.TextField txtTimKiemSp;
    // End of variables declaration//GEN-END:variables
}
